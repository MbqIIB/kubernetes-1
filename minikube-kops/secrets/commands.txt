
# generate secret using files
```
echo -n "root" > ./username.txt
echo -n "password" > ./password.txt

kubectl create secret generic db-user-pass --from-file=./username.txt --from-file=./password.txt
```

# generate secrets using ssl certificate
```
kubectl create secret generic ssl-certificate --from-file=ssh-privatekey=~/.ssh/id_rsa --ssl-cert-=ssl-cert=mysslcert.crt
```
# also to use yml files

secrets-db-secret.yml
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaue
data:
  password: cm9vdA==
  username: cGFzc3dvcmQ=

# to generate password and username because we have to use base64 encryption
echo -n "root" | base64

echo -n "password" | base64

# kubectl create -f secrets-db-secret.yml


# create a pod that exposes the secrets as envirnment variables
apiVersion: v1
kind: Pod
metadata:
  name: nodehelloworld.example.com
  labels:
    app: helloworld
spec:
  containers:
  - name: hamednodejs
    image: hhaddadian/nodejs
    ports:
    - name: nodejs-port
      containerPort: 3000
    env:
      - name: SECRET_USERNAME
        valueFrom:
          secretKeyRef:
            name: db-secret
            key: username
      - name: SECRET_PASSWORD
      [...]



# provide secrets in a file
apiVersion: v1
kind: Pod
metadata:
  name: nodehelloworld.example.com
  labels:
    app: helloworld
spec:
  containers:
  - name: hamednodejs
    image: hhaddadian/nodejs
    ports:
    - name: nodejs-port
      containerPort: 3000
    volumeMounts:
    - name: credvolume
      mountPath:/etc/creds
      readOnly: true
    volumes:
    - name: credvolume
      secret:
        secretName: db-secrets
